#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<alloc.h>
#include<mem.h>
int WriteBMP(char *, unsigned int, FILE *);
int InitBMPHeader(char *, FILE **);
int capture(char *);

int InitBMPHeader(char *filename, FILE **fpDestination)
{FILE *fpDest;
char header[]={0x42,0x4d,0x76,0x58,0x02,0x00,0x00,0x00,0x00,0x00,
	0x76,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x80,0x02,0x00,0x00,0xe0,
	0x01,0x00,0x00,0x01,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x58,
	0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,0x00,0x00,
	0x00,0xff,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0x00,0xff,
	0x00,0xff,0x00,0x00,0x40,0x80,0x00,0xc0,0xc0,0xc0,0x00,0x80,0x80,
	0x80,0x00,0xff,0x80,0x00,0x00,0x80,0xff,0x00,0x00,0xff,0xff,0x80,
	0x00,0x80,0x80,0xff,0x00,0xff,0x80,0xff,0x00,0x00,0xff,0xff,0x00,
        0xff,0xff,0xff,0x00};
fpDest=fopen(filename, "wb");
if(!fpDest)
{printf("Cannot open destination file");
fclose(fpDest);
return -1;
}
fwrite(header, 0x76, 1, fpDest);
(*fpDestination)=fpDest;
return 1;
}

int WriteBMP(char *data, unsigned int length, FILE *fpDest)
{fwrite(data, length, 1, fpDest);
return 0;
}

int capture(char *filename)
{
int ctr, ctr1, curY;
unsigned int pixelColor, bitCtr=0;
char *data, flag=0;FILE *fpDest=NULL;
if(getgraphmode()<0)
{
fprintf(stderr, "\nCannot detect graphics mode\n");
return -1;
}
data=(char *)malloc(38400);
if(data==NULL)
{
fprintf(stderr, "\nCannot allocate memory for buffer\n");
return -1;
}
memset(data, 0, 38400);
InitBMPHeader(filename, &fpDest);
if(!fpDest)
return -1;
for(curY=479; curY>100; curY-=120)
{
		for(ctr=curY, bitCtr=0; ctr>curY-120;ctr--)
		{
			for(ctr1=0; ctr1<640; ctr1++)
			{
				pixelColor=(getpixel(ctr1, ctr));
				if(pixelColor==0)
					pixelColor=15;
				else
					pixelColor=0;
				pixelColor=pixelColor&0xf;
				if(pixelColor!=0)
				{
					if(flag==0)
						pixelColor=pixelColor<<4;
					data[bitCtr]|=pixelColor;
				}
				flag^=1; if(flag==0) bitCtr++;
			}
		}
		WriteBMP(data, 38400, fpDest);
		memset(data, 0, 38400);
	}
	fclose(fpDest);	// close file
	free(data);         // deallocate memory
	return 1;           // Success
}